# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


# NOTE: must set "Crossbow" as name to have the badge links working in the
# github comment reports!
name: Crossbow
on:
  push:
    branches:
      - "*-github-*"


jobs:
  build:
    name: "Build wheel for Windows"
    runs-on: windows-2019
    env:
      # archery uses this environment variable
      PYTHON: "3.10"
      # this is a private repository at the moment (mostly because of licensing
      # consideration of windows images with visual studio), but anyone can
      # recreate the image by manually building it via:
      # `archery build python-wheel-windows-vs2017`
      # note that we don't run docker build since there wouldn't be a cache hit
      # and rebuilding the dependencies takes a fair amount of time
      REPO: ghcr.io/ursacomputing/arrow
      # prefer the docker cli over docker-compose
      ARCHERY_USE_DOCKER_CLI: 1

    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: arrow
          repository: apache/arrow
          ref: 461b3b9ac61df41e74b09a7c75b207e633eee81a
          submodules: recursive

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          cache: 'pip'
          python-version: 3.8
      - name: Install Archery
        shell: bash
        run: pip install -e arrow/dev/archery[all]


      - name: Build wheel
        shell: cmd
        run: |
          cd arrow
          @rem We want to use only
          @rem   archery docker run -e SETUPTOOLS_SCM_PRETEND_VERSION=9.0.0.dev251 python-wheel-windows-vs2017
          @rem but it doesn't use pulled caches.
          @rem It always build an image from scratch.
          @rem We can remove this workaround once we find a way to use
          @rem pulled caches when build an image.
          echo on
          archery docker pull --no-ignore-pull-failures python-wheel-windows-vs2017
          if errorlevel 1 (
            archery docker build --no-pull python-wheel-windows-vs2017 || exit /B 1
          )
          archery docker run --no-build -e SETUPTOOLS_SCM_PRETEND_VERSION=9.0.0.dev251 python-wheel-windows-vs2017

      - name: Test wheel
        shell: cmd
        run: |
          cd arrow
          archery docker run python-wheel-windows-test

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Setup Crossbow
        shell: bash
        run: pip install -e arrow/dev/archery[crossbow-upload]
      - name: Upload artifacts
        shell: bash
        run: |
          archery crossbow \
          --queue-path $(pwd) \
          --queue-remote https://github.com/ursacomputing/crossbow \
          upload-artifacts \
          --sha nightly-packaging-2022-06-22-0-github-wheel-windows-cp310-amd64 \
          --tag nightly-packaging-2022-06-22-0-github-wheel-windows-cp310-amd64 \
          "arrow/python/dist/*.whl"
        env:
          CROSSBOW_GITHUB_TOKEN: ${{ secrets.CROSSBOW_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Upload package to Gemfury
        shell: bash
        run: |
          path=$(ls arrow/python/dist/*.whl)
          curl -F "package=@${path}" https://${CROSSBOW_GEMFURY_TOKEN}@push.fury.io/${CROSSBOW_GEMFURY_ORG}/
        env:
          CROSSBOW_GEMFURY_TOKEN: ${{ secrets.CROSSBOW_GEMFURY_TOKEN }}
          CROSSBOW_GEMFURY_ORG: ${{ secrets.CROSSBOW_GEMFURY_ORG }}


      - name: Push Docker Image
        shell: cmd
        run: |
          cd arrow
          archery docker push python-wheel-windows-vs2017

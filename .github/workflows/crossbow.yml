# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


# NOTE: must set "Crossbow" as name to have the badge links working in the
# github comment reports!
name: Crossbow
on:
  push:
    branches:
      - "*-github-*"


jobs:
  package:
    name: Package
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: arrow
          repository: apache/arrow
          ref: c7444224c5f670423ddf3ec577915aa754b013ac
          submodules: recursive

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
      - name: Cache ccache
        uses: actions/cache@v2
        with:
          path: arrow/dev/tasks/linux-packages/apache-arrow/yum/build/amazon-linux-2/ccache
          key: linux-yum-ccache-amazon-linux-2-${{ hashFiles('arrow/cpp/**') }}
          restore-keys: linux-yum-ccache-amazon-linux-2-
      - name: Build
        run: |
          set -e
          pushd arrow/dev/tasks/linux-packages
          rake version:update
          rake docker:pull || :
          rake --trace yum:build BUILD_DIR=build
          sudo rm -rf */*/build
          popd
        env:
          APT_TARGETS: amazon-linux-2
          ARROW_VERSION: 9.0.0.dev122
          REPO: ${{ secrets.REPO }}
          YUM_TARGETS: amazon-linux-2
      - name: Docker Push
        continue-on-error: true
        shell: bash
        run: |
          pushd arrow/dev/tasks/linux-packages
          rake docker:push
          popd
        env:
          APT_TARGETS: amazon-linux-2
          REPO: ${{ secrets.REPO }}
          YUM_TARGETS: amazon-linux-2
      - name: Set up test
        run: |
          set -e
          sudo apt update
          # We can install createrepo_c by package with Ubuntu 22.04.
          #   createrepo_c \
          sudo apt install -y \
            apt-utils \
            devscripts \
            gpg \
            rpm
          gem install apt-dists-merge
          (echo "Key-Type: RSA"; \
           echo "Key-Length: 4096"; \
           echo "Name-Real: Test"; \
           echo "Name-Email: test@example.com"; \
           echo "%no-protection") | \
            gpg --full-generate-key --batch
          GPG_KEY_ID=$(gpg --list-keys --with-colon test@example.com | grep fpr | cut -d: -f10)
          echo "GPG_KEY_ID=${GPG_KEY_ID}" >> ${GITHUB_ENV}
          case "amazon-linux-2" in
            almalinux-*|amazon-linux-*|centos-*)
              repositories_dir=arrow/dev/tasks/linux-packages/apache-arrow-release/yum/repositories
              rpm2cpio ${repositories_dir}/*/*/*/Packages/apache-arrow-release-*.rpm | \
                cpio -id
              mv etc/pki/rpm-gpg/RPM-GPG-KEY-Apache-Arrow \
                arrow/dev/tasks/linux-packages/KEYS
              ;;
          esac
          gpg --export --armor test@example.com >> arrow/dev/tasks/linux-packages/KEYS
      # We can install createrepo_c by package with Ubuntu 22.04.
      # This is workaround:
      - name: Install createrepo_c
        run: |
          sudo apt install -y \
            cmake \
            libbz2-dev \
            libcurl4-openssl-dev \
            libglib2.0-dev \
            liblzma-dev \
            libmagic-dev \
            librpm-dev \
            libsqlite3-dev \
            libssl-dev \
            libxml2-dev \
            libzstd-dev \
            pkg-config \
            zlib1g-dev
          git clone --depth 1 https://github.com/rpm-software-management/createrepo_c.git
          pushd createrepo_c
          /usr/bin/cmake \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DENABLE_BASHCOMP=OFF \
            -DENABLE_DRPM=OFF \
            -DENABLE_PYTHON=OFF \
            -DWITH_LIBMODULEMD=OFF \
            -DWITH_ZCHUNK=OFF \
            .
          make -j$(nproc)
          sudo make install
          popd
          rm -rf createrepo_c
      - name: Test
        run: |
          set -e
          pushd arrow/dev/tasks/linux-packages
          rake --trace yum:test
          rm -rf yum/repositories
          popd
        env:
          APT_TARGETS: amazon-linux-2
          ARROW_VERSION: 9.0.0.dev122
          YUM_TARGETS: amazon-linux-2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Setup Crossbow
        shell: bash
        run: pip install -e arrow/dev/archery[crossbow-upload]
      - name: Upload artifacts
        shell: bash
        run: |
          archery crossbow \
          --queue-path $(pwd) \
          --queue-remote https://github.com/ursacomputing/crossbow \
          upload-artifacts \
          --sha nightly-packaging-2022-05-29-0-github-amazon-linux-2-amd64 \
          --tag nightly-packaging-2022-05-29-0-github-amazon-linux-2-amd64 \
          "arrow/dev/tasks/linux-packages/**/*.rpm" 
        env:
          CROSSBOW_GITHUB_TOKEN: ${{ secrets.CROSSBOW_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
